version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: janbol-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: janbol
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - janbol-network

  backend:
    build: .
    container_name: janbol-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/janbol?authSource=admin
      JWT_SECRET: super-secure-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: super-secure-refresh-secret-change-in-production
      JWT_EXPIRES_IN: 7d
      BCRYPT_ROUNDS: 12
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      MAX_FILE_SIZE: 10485760
      LOG_LEVEL: info
    ports:
      - "4000:4000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
    networks:
      - janbol-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:4000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: janbol-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - janbol-network
    command: redis-server --appendonly yes

volumes:
  mongodb_data:
  redis_data:

networks:
  janbol-network:
    driver: bridge